{
  "cpmain": {
    "prefix": "cpmain",
    "body": [
      "#include <bits/stdc++.h>",
      "#include <numeric>",
      "#define int long long int",
      "#define print cout << \"triggered\" << endl",
      "#define forn(n) for(int i=0; i<n; i++)",
      "#define all(a) a.begin(), a.end()",
      "#define printa(a) for(auto x : a) cout << x << endl",
      "#define vi vector",
      "#define us unordered_set",
      "#define um unordered_map",
      "using namespace std;",
      "",
      "int len, a, b, c, num, temp, count;",
      "string s;",
      "",
      "void solve(){",
      "\t${1}",
      "\tforn(len){",
      "\t\tcin >> temp;",
      "\t\tarr.push_back(temp);",
      "\t}",
      "\treturn",
      "}",
      "",
      "int32_t main(){",
      "\tios_base::sync_with_stdio(0)",
      "\tcin.tie(0);",
      "\tint t = 1;",
      "\tcin >> t;",
      "\twhile(t--) solve();",
      "}"
    ],
    "description": "cp main"
  },
  "binaryExpo": {
    "prefix": "binaryexpo",
    "body": [
      "int power(int a, int b){",
      "\tint res = 1;",
      "\twhile (b) {",
      "\t\tif(b & 1) res *= a;",
      "\t\ta *= a",
      "\t\tb/=2;",
      "\t}",
      "\t return res;",
      "}"
    ],
    "description": "binary exponentiation"
  },
  "bigIntegers": {
    "prefix": "biginttostring",
    "body": [
      "while(num != 0){",
      "\tif(num & 1) str = '1' + str;",
      "\telse str = '0' + str;",
      "\tnum = num >> 1;",
      "}",
      "int mul = 1, ans = 0;",
      "for(int i = s.length-1; i >= 0; i--){",
      "\tif(s[i] == '1') ans += mul;",
      "\tmul *= 2;",
      "}"
    ],
    "description": "bigint convert to string"
  }
}
